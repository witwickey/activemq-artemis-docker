
{{if (.Vars.flags.testmerge) }}
command:
  xmlstarlet sel -N activemq="urn:activemq" -N core="urn:activemq:core" -t -v "activemq:configuration/core:core/core:security-enabled" /var/lib/artemis/etc/broker.xml:
    exit-status: 0
    stdout:
    - false
    stderr: []
    timeout: 1000
{{end}}

command:
  ps -ef|grep -v grep|grep java:
    exit-status: 0
    stdout:
{{if getEnv "BROKER_CONFIG_GLOBAL_MAX_SIZE" }}
    - "-Dbrokerconfig.globalMaxSize={{ .Env.BROKER_CONFIG_GLOBAL_MAX_SIZE }}"
{{end}}
{{if getEnv "JAVA_OPTS" }}
    - {{ .Env.JAVA_OPTS }}
{{end}}
    stderr: []
    timeout: 1000

port:
  tcp:8161:
    listening: true
{{if getEnv "ENABLE_JMX_EXPORTER" }}
  tcp:9404:
    listening: true
{{end}}

{{if and (.Env.ACTIVEMQ_ARTEMIS_VERSION | regexMatch "(2\\.[3-9]\\.[0-9]|2\\.\\d{2}\\.[0-9]|[3-9]\\d*\\.\\d+\\.[0-9])") (getEnv "ARTEMIS_USERNAME") }}
http:
  http://127.0.0.1:8161/console:
    status: 200
  http://127.0.0.1:8161/console/jolokia:
    status: 200
    username: "{{ .Env.ARTEMIS_USERNAME }}"
    password: "{{ .Env.ARTEMIS_PASSWORD }}"
{{end}}

user:
  artemis:
    exists: true
    uid: 1000
    groups:
      - artemis

group:
  artemis:
    exists: true
    gid: 1000

process:
  java:
    running: true

file:
  /opt/apache-artemis:
    exists: true
    owner: root
    group: root
    filetype: symlink
    linked-to: /opt/apache-artemis-{{ .Env.ACTIVEMQ_ARTEMIS_VERSION }}
  
  /opt/apache-artemis-{{ .Env.ACTIVEMQ_ARTEMIS_VERSION }}:
    exists: true
    owner: root
    group: root
    filetype: directory

  /var/lib/artemis:
    exists: true
    owner: artemis
    group: artemis
    filetype: directory
  
  /var/lib/artemis/data:
    exists: true
    owner: artemis
    group: artemis
    filetype: directory

  /var/lib/artemis/etc/broker.xml:
    exists: true
    owner: artemis
    group: artemis
    filetype: file
    contains:
{{ if (.Env.ACTIVEMQ_ARTEMIS_VERSION | regexMatch "(1\\.[^0-2]\\.[0-9]+|2\\.[0-9]+\\.[0-9]+)") }}
      - <name>{{.Vars.hostname}}</name>
  {{if getEnv "DISABLE_SECURITY" }}
      - <security-enabled>false</security-enabled>
  {{end}}
{{ end }}
{{ if (.Env.ACTIVEMQ_ARTEMIS_VERSION | regexMatch "(2\\.[3-9]\\.\\d+|2\\.\\d{2}\\.\\d+)") }}
  {{if getEnv "CRITICAL_ANALYZER" }}
      - <critical-analyzer>{{.Env.CRITICAL_ANALYZER }}</critical-analyzer>
  {{end}}
  {{if getEnv "CRITICAL_ANALYZER_TIMEOUT" }}
      - <critical-analyzer-timeout>{{.Env.CRITICAL_ANALYZER_TIMEOUT }}</critical-analyzer-timeout>
  {{end}}
  {{if getEnv "CRITICAL_ANALYZER_CHECK_PERIOD" }}
      - <critical-analyzer-check-period>{{.Env.CRITICAL_ANALYZER_CHECK_PERIOD }}</critical-analyzer-check-period>
  {{end}}
  {{if getEnv "CRITICAL_ANALYZER_POLICY" }}
      - <critical-analyzer-policy>{{.Env.CRITICAL_ANALYZER_POLICY }}</critical-analyzer-policy>
  {{end}}
{{ end }}



  /var/lib/artemis/etc/artemis-users.properties:
    exists: true
    owner: artemis
    group: artemis
    filetype: file

  /var/lib/artemis/etc/artemis-roles.properties:
    exists: true
    owner: artemis
    group: artemis
    filetype: file
  
{{ if and (.Env.ACTIVEMQ_ARTEMIS_VERSION | regexMatch "(1.5.[^012]|[^1]\\.\\d+\\.\\d+)") (getEnv "ARTEMIS_PERF_JOURNAL" "AUTO" | regexMatch "AUTO") }}
  /var/lib/artemis/data/.perf-journal-completed:
    exists: true
    owner: artemis
    group: artemis
    filetype: file
{{ end }}

  /var/lib/artemis/etc/artemis.profile:
    exists: true
    owner: artemis
    group: artemis
    filetype: file
    contains:
{{ if (.Env.BASE_IMAGE | regexMatch "(openjdk\\:8.*)") }}
      - "-Djava.net.preferIPv4Addresses=true"
      - "-XX:+UnlockExperimentalVMOptions"
      - "-XX:+UseCGroupMemoryLimitForHeap"
      - "-XX:MaxRAMFraction=2"
{{ end }}
{{if getEnv "JAVA_OPTS" }}
      - "-Djavax.net.ssl.keyStore=/var/lib/artemis/etc/keystore.jks"
      - "-Djavax.net.ssl.keyStorePassword=changeit"
{{end}}
{{if getEnv "ENABLE_JMX_EXPORTER" }}
      - "jmx_prometheus_javaagent.jar=9404"
{{else}}
      - "!jmx_prometheus_javaagent.jar"  
{{end}} 
      - "$BROKER_CONFIGS"
{{ if or (getEnv "ARTEMIS_MIN_MEMORY") (getEnv "ARTEMIS_MAX_MEMORY") (getEnv "ENABLE_JMX") }}
  {{if getEnv "ARTEMIS_MIN_MEMORY" }}
      - "-Xms{{ .Env.ARTEMIS_MIN_MEMORY }}"
  {{else}}
      - "!-Xms"  
  {{end}}
  {{if getEnv "ARTEMIS_MAX_MEMORY" }}
      - "-Xmx{{ .Env.ARTEMIS_MAX_MEMORY }}"
  {{ else }}
      - "!-Xmx"
  {{end}}
  {{if getEnv "ENABLE_JMX" }}
      - "-Dcom.sun.management.jmxremote=true"
      {{ if getEnv "JMX_PORT" }}
      - "-Dcom.sun.management.jmxremote.port={{ .Env.JMX_PORT }}"
      {{ end }}
      {{ if getEnv "JMX_PORT" }}
      - "-Dcom.sun.management.jmxremote.rmi.port={{ .Env.JMX_RMI_PORT }}"
      {{ end }}
      - "-Dcom.sun.management.jmxremote.ssl=false"
      - "-Dcom.sun.management.jmxremote.authenticate=false"
  {{end}}
{{end}}

{{if (.Vars.flags.testmerge) }}
  /var/lib/artemis/etc/created_by_entrypoint-00:
    exists: true
    owner: artemis
    group: artemis
{{end}}

{{if and (getEnv "ENABLE_JMX_EXPORTER") (getEnv "TEST_CUSTOM_JMX_EXPORTER_CONFIG") }}
  /opt/jmx-exporter/etc/jmx-exporter-config.yaml:
    exists: true
    owner: artemis
    group: artemis
    contains:
      - "just_for_test"
{{end}}
